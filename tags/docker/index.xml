<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Jiang Jun Jie's Site</title><link>https://www.jiangjunjie.cn/tags/docker/</link><description>Recent content in docker on Jiang Jun Jie's Site</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 11 May 2023 14:32:27 +0800</lastBuildDate><atom:link href="https://www.jiangjunjie.cn/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker FFmpeg</title><link>https://www.jiangjunjie.cn/2023/05/docker-ffmpeg/</link><pubDate>Thu, 11 May 2023 14:32:27 +0800</pubDate><guid>https://www.jiangjunjie.cn/2023/05/docker-ffmpeg/</guid><description>Dockerfile FROM ubuntu:22.04 RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ca-certificates RUN mv /etc/apt/sources.list /etc/apt/sources.list.bak RUN echo &amp;#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN echo &amp;#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN echo &amp;#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN echo &amp;#34;deb http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN apt-get update &amp;amp;&amp;amp; apt-get install -y wget java-common RUN wget https://corretto.</description></item><item><title>Docker ELK</title><link>https://www.jiangjunjie.cn/2022/09/docker-elk/</link><pubDate>Thu, 08 Sep 2022 11:02:46 +0800</pubDate><guid>https://www.jiangjunjie.cn/2022/09/docker-elk/</guid><description>docker compose files https://github.com/deviantony/docker-elk</description></item><item><title>Docker GeoServer</title><link>https://www.jiangjunjie.cn/2022/09/docker-geoserver/</link><pubDate>Thu, 08 Sep 2022 10:54:53 +0800</pubDate><guid>https://www.jiangjunjie.cn/2022/09/docker-geoserver/</guid><description>version: &amp;#39;3.1&amp;#39; services: geoserver: image: geonode/geoserver:2.18.2 container_name: geoserver volumes: - /opt/geoserver/data:/geoserver_data/data ports: - 18080:8080 restart: always</description></item><item><title>Docker OSM</title><link>https://www.jiangjunjie.cn/2022/09/docker-osm/</link><pubDate>Thu, 08 Sep 2022 10:53:13 +0800</pubDate><guid>https://www.jiangjunjie.cn/2022/09/docker-osm/</guid><description>version: &amp;#39;3.2&amp;#39; services: osm: image: overv/openstreetmap-tile-server:latest container_name: osm volumes: - openstreetmap-data:/var/lib/postgresql/12/main # environment: # - ALLOW_CORS=enabled ports: - 28080:80 restart: always command: &amp;#34;run&amp;#34; networks: - proxy volumes: openstreetmap-data: external: true networks: proxy: external: true</description></item><item><title>Docker Oracle11gR2</title><link>https://www.jiangjunjie.cn/2022/09/docker-oracle11gr2/</link><pubDate>Thu, 08 Sep 2022 10:33:04 +0800</pubDate><guid>https://www.jiangjunjie.cn/2022/09/docker-oracle11gr2/</guid><description>version: &amp;#39;3.1&amp;#39; services: oracle-xe: image: gvenzl/oracle-xe:11 container_name: oracle-xe restart: always user: 1000:1000 environment: - ORACLE_PASSWORD={password} volumes: - ./data:/u01/app/oracle/oradata ports: - 1521:1521 network_mode: bridge version: &amp;#39;3.1&amp;#39; services: oracle11g: image: registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g container_name: oracle11g privileged: true ports: - 1521:1521 restart: always volumes: - /home/oracle/oradata:/home/oracle/app/oracle/oradata network_mode: bridge root的默认密码为helowin oracle默认密码</description></item><item><title>Docker Keycloak</title><link>https://www.jiangjunjie.cn/2022/09/docker-keycloak/</link><pubDate>Thu, 08 Sep 2022 10:13:00 +0800</pubDate><guid>https://www.jiangjunjie.cn/2022/09/docker-keycloak/</guid><description>version: &amp;#39;3&amp;#39; volumes: postgres_data: driver: local services: postgres: image: postgres volumes: - postgres_data:/var/lib/postgresql/data environment: POSTGRES_DB: keycloak POSTGRES_USER: keycloak POSTGRES_PASSWORD: {db password} keycloak: image: quay.io/keycloak/keycloak:legacy environment: DB_VENDOR: POSTGRES DB_ADDR: postgres DB_DATABASE: keycloak DB_USER: keycloak DB_SCHEMA: public DB_PASSWORD: {db password} KEYCLOAK_USER: admin KEYCLOAK_PASSWORD: {password} # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn&amp;#39;t be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.</description></item><item><title>Nginx</title><link>https://www.jiangjunjie.cn/2021/03/nginx/</link><pubDate>Tue, 30 Mar 2021 14:19:29 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/nginx/</guid><description>安装和配置Nginx容器 文件目录 /home/nginx/conf.d 用于存放配置文件 /home/nginx/cert 用于存放https证书 /home/nginx/html 用于存放网页文件 /home/nginx/logs 用于存放日志 运行nginx容器 docker run -d \ --name nginx --restart always</description></item><item><title>Use Docker to Deploy SpringBoot Jar</title><link>https://www.jiangjunjie.cn/2021/03/use-docker-to-deploy-springboot-jar/</link><pubDate>Tue, 30 Mar 2021 14:03:01 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/use-docker-to-deploy-springboot-jar/</guid><description>构建与启动Java容器。IntelliJ IDEA运行Gradle bootjar命令 将生成的jar包上传到服务器目录，比如/data目录。 在/</description></item><item><title>Cas</title><link>https://www.jiangjunjie.cn/2021/03/cas/</link><pubDate>Thu, 25 Mar 2021 13:55:38 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/cas/</guid><description>install docker run --rm -p 8080:8080 apereo/cas-initializr:6.3.0 curl http://localhost:8080/starter.tgz -o cas.tgz tar -zxvf cas.tgz chmod +x docker-build.sh chmod +x docker-run.sh ./docker-build.sh</description></item><item><title>Docker MongoDB</title><link>https://www.jiangjunjie.cn/2021/03/docker-mongodb/</link><pubDate>Wed, 24 Mar 2021 14:57:02 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-mongodb/</guid><description>start mongodb 4.4 in docker,use ~/mongo/data to persist data docker-compose.yml
version: &amp;#39;3.1&amp;#39; services: mongodb: image: mongo:4.4 command: mongod --auth volumes: - ~/mongo/data:/data/db ports: - 27017:27017 restart: always environment: MONGO_INITDB_ROOT_USERNAME: {username} MONGO_INITDB_ROOT_PASSWORD: {password}</description></item><item><title>Docker MySQL</title><link>https://www.jiangjunjie.cn/2021/03/docker-mysql/</link><pubDate>Wed, 24 Mar 2021 14:57:02 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-mysql/</guid><description>start mysql8 in docker,use ~/mysql/data to persist data docker-compose.yml
version: &amp;#39;3.1&amp;#39; services: mysql: image: mysql:8 command: --default-authentication-plugin=mysql_native_password volumes: - ~/mysql/data:/var/lib/mysql ports: - 3306:3306 restart: always environment: MYSQL_ROOT_PASSWORD: {your password} TZ: Asia/Shanghai</description></item><item><title>Docker PgAdmin4</title><link>https://www.jiangjunjie.cn/2021/03/docker-pgadmin4/</link><pubDate>Wed, 24 Mar 2021 14:57:02 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-pgadmin4/</guid><description>start pgadmin4 5.1 in docker docker-compose.yml
version: &amp;#39;3.1&amp;#39; services: pgadmin4: image: dpage/pgadmin4:5.1 ports: - 8081:80 restart: always environment: PGADMIN_DEFAULT_EMAIL: {email} PGADMIN_DEFAULT_PASSWORD: {password}</description></item><item><title>Docker PostgreSQL</title><link>https://www.jiangjunjie.cn/2021/03/docker-postgresql/</link><pubDate>Wed, 24 Mar 2021 14:57:02 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-postgresql/</guid><description>start postgresql 13 and pgadmin4 5.1 in docker,use ~/postgresql/data to persist data docker-compose.yml
version: &amp;#39;3.1&amp;#39; services: postgresql: image: postgres:13 volumes: - ~/postgresql/data:/var/lib/postgresql/data ports: - 5432:5432 restart: always environment: POSTGRES_PASSWORD: {password} pgadmin4: image: dpage/pgadmin4:5.1 ports: - 80:80 restart: always environment: PGADMIN_DEFAULT_EMAIL: {email} PGADMIN_DEFAULT_PASSWORD: {password}</description></item><item><title>Docker RabbitMQ</title><link>https://www.jiangjunjie.cn/2021/03/docker-rabbitmq/</link><pubDate>Wed, 24 Mar 2021 14:57:02 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-rabbitmq/</guid><description>start rabbitmq 3.8.14 and management plugin in docker docker-compose.yml
version: &amp;#39;3.1&amp;#39; services: rabbitmq: image: rabbitmq:3.8.14-management ports: - 15672:15672 - 5672:5672 restart: always environment: RABBITMQ_DEFAULT_USER: {username} RABBITMQ_DEFAULT_PASS: {password}</description></item><item><title>Docker Redis</title><link>https://www.jiangjunjie.cn/2021/03/docker-redis/</link><pubDate>Wed, 24 Mar 2021 14:57:02 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-redis/</guid><description>start redis 6.2 in docker,use ~/redis/data to persist data docker-compose.yml
version: &amp;#39;3.1&amp;#39; services: redis: image: redis:6.2 #command: redis-server --requirepass {password} command: redis-server /usr/local/etc/redis/redis.conf volumes: - ~/redis/redis.conf:/usr/local/etc/redis/redis.conf - ~/redis/data/:/data/ ports: - 6379:6379 restart: always redis.conf
requirepass {password} appendonly yes daemonize no</description></item><item><title>Docker Compose</title><link>https://www.jiangjunjie.cn/2021/03/docker-compose/</link><pubDate>Wed, 24 Mar 2021 14:30:04 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker-compose/</guid><description>Install Docker Compose V2 in CentOS7.4 Docker Engine Installed cmd mkdir -p ~/.docker/cli-plugins/ curl -SL https://github.com/docker/compose/releases/download/v2.0.1/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose chmod +x ~/.docker/cli-plugins/docker-compose To install Docker Compose for all users on your system, replace ~/.docker/cli-plugins with /usr/local/lib/docker/cli-plugins docker compose version 新版本Docker自带Docker Compose V2</description></item><item><title>Docker</title><link>https://www.jiangjunjie.cn/2021/03/docker/</link><pubDate>Wed, 17 Mar 2021 13:58:53 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/docker/</guid><description>Install # use aliyun mirror curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun mirrors { &amp;#34;registry-mirrors&amp;#34;: [ &amp;#34;https://dockerproxy.com&amp;#34;, &amp;#34;https://registry.docker-cn.com&amp;#34; ] } # registry sudo docker run -d -p 5000:5000 --restart always --name registry -v docker-registry:/var/lib/registry registry:2 # nexus oss3 sudo docker volume create nexus-data sudo docker run -d --restart always -p 8081:8081 --name nexus -v nexus-data:/nexus-data sonatype/nexus3 issue 在docker容器内部</description></item></channel></rss>