<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dev on Jiang Jun Jie's Site</title><link>https://www.jiangjunjie.cn/categories/dev/</link><description>Recent content in dev on Jiang Jun Jie's Site</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 11 May 2023 14:32:27 +0800</lastBuildDate><atom:link href="https://www.jiangjunjie.cn/categories/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker FFmpeg</title><link>https://www.jiangjunjie.cn/2023/05/docker-ffmpeg/</link><pubDate>Thu, 11 May 2023 14:32:27 +0800</pubDate><guid>https://www.jiangjunjie.cn/2023/05/docker-ffmpeg/</guid><description>Dockerfile FROM ubuntu:22.04 RUN apt-get update &amp;amp;&amp;amp; apt-get install -y ca-certificates RUN mv /etc/apt/sources.list /etc/apt/sources.list.bak RUN echo &amp;#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN echo &amp;#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN echo &amp;#34;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN echo &amp;#34;deb http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse&amp;#34; &amp;gt;&amp;gt; /etc/apt/sources.list RUN apt-get update &amp;amp;&amp;amp; apt-get install -y wget java-common RUN wget https://corretto.</description></item><item><title>Swagger3</title><link>https://www.jiangjunjie.cn/2021/06/swagger3/</link><pubDate>Tue, 15 Jun 2021 15:18:34 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/06/swagger3/</guid><description/></item><item><title>Logback Spring</title><link>https://www.jiangjunjie.cn/2021/06/logback-spring/</link><pubDate>Tue, 15 Jun 2021 15:17:11 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/06/logback-spring/</guid><description>logback-spring.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;configuration scan=&amp;#34;true&amp;#34; scanPeriod=&amp;#34;60 seconds&amp;#34; debug=&amp;#34;false&amp;#34;&amp;gt; &amp;lt;contextName&amp;gt;logback&amp;lt;/contextName&amp;gt; &amp;lt;property name=&amp;#34;LOG_HOME&amp;#34; value=&amp;#34;log&amp;#34;/&amp;gt; &amp;lt;!-- 彩色日志依赖的渲染类 --&amp;gt; &amp;lt;conversionRule conversionWord=&amp;#34;clr&amp;#34; converterClass=&amp;#34;org.springframework.boot.logging.logback.ColorConverter&amp;#34;/&amp;gt; &amp;lt;conversionRule conversionWord=&amp;#34;wex&amp;#34; converterClass=&amp;#34;org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter&amp;#34;/&amp;gt; &amp;lt;!-- 彩色日志格式 --&amp;gt; &amp;lt;property name=&amp;#34;CONSOLE_LOG_PATTERN&amp;#34; value=&amp;#34;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }) [%t]{magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wex&amp;#34;/&amp;gt; &amp;lt;property name=&amp;#34;FILE_LOG_PATTERN&amp;#34; value=&amp;#34;%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n%wex&amp;#34;/&amp;gt; &amp;lt;!-</description></item><item><title>SpringBoot</title><link>https://www.jiangjunjie.cn/2021/06/springboot/</link><pubDate>Tue, 15 Jun 2021 14:33:46 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/06/springboot/</guid><description/></item><item><title>SpringBoot Grade</title><link>https://www.jiangjunjie.cn/2021/06/springboot-grade/</link><pubDate>Tue, 15 Jun 2021 14:08:59 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/06/springboot-grade/</guid><description>build.gradle templates plugins { id &amp;#39;org.springframework.boot&amp;#39; version &amp;#39;2.5.0&amp;#39; id &amp;#39;io.spring.dependency-management&amp;#39; version &amp;#39;1.0.11.RELEASE&amp;#39; id &amp;#39;java&amp;#39; } group = &amp;#39;com.example&amp;#39; version = &amp;#39;0.0.1-SNAPSHOT&amp;#39; sourceCompatibility = &amp;#39;1.8&amp;#39; configurations { compileOnly { extendsFrom annotationProcessor } } repositories { maven {url &amp;#39;https://maven.aliyun.com/repository/public&amp;#39;} maven { url &amp;#39;http://192.168.10.204:8081/repository/maven-public/&amp;#39; allowInsecureProtocol true } mavenCentral() } dependencies { // jpa implementation &amp;#39;org.springframework.boot:spring-boot-starter-data-jpa&amp;#39; // swagger mplementation &amp;#39;io.springfox:springfox-boot-starter:3.0.0&amp;#39; // webservice implementation &amp;#39;org.springframework.boot:spring-boot-starter-web-services&amp;#39; // druid implementation &amp;#39;com.alibaba:druid-spring-boot-starter:1.2.5&amp;#39; // mybatis and plus implementation &amp;#39;org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4&amp;#39;</description></item><item><title>Charles</title><link>https://www.jiangjunjie.cn/2021/04/charles/</link><pubDate>Fri, 02 Apr 2021 10:02:00 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/04/charles/</guid><description>Charles监听localhost请求 访问http://localhost.charlesproxy.com:port 浏览器代理，监听端口</description></item><item><title>Cas</title><link>https://www.jiangjunjie.cn/2021/03/cas/</link><pubDate>Thu, 25 Mar 2021 13:55:38 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/cas/</guid><description>install docker run --rm -p 8080:8080 apereo/cas-initializr:6.3.0 curl http://localhost:8080/starter.tgz -o cas.tgz tar -zxvf cas.tgz chmod +x docker-build.sh chmod +x docker-run.sh ./docker-build.sh</description></item><item><title>Wechat</title><link>https://www.jiangjunjie.cn/2021/03/wechat/</link><pubDate>Thu, 25 Mar 2021 10:47:08 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/wechat/</guid><description>Install # install wepy version 1.X cnpm install wepy-cli -g error Q：regeneratorRuntime.mark undefined A: 关掉小程序开发工具ES6转ES5</description></item><item><title>nodeJS</title><link>https://www.jiangjunjie.cn/2021/03/nodejs/</link><pubDate>Thu, 25 Mar 2021 09:50:59 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/nodejs/</guid><description>nvm setting nvm ls nvm ls available nvm install {version} nvm use {version} npm setting npm config set registry https://registry.npm.taobao.org npm config set sass_binary_site &amp;#34;https://npm.taobao.org/mirrors/node-sass&amp;#34; npm config list cnpm settting npm install -g cnpm --registry=https://registry.npm.taobao.org error MSBUILD : error MSB4132: 无法识别工具版本“2.0”。可用的工具版本为 &amp;ldquo;4</description></item><item><title>Git</title><link>https://www.jiangjunjie.cn/2021/03/git/</link><pubDate>Thu, 25 Mar 2021 09:50:39 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/git/</guid><description>cmd # 下载子模块代码 git submodule update --init --recursive error Git报错解决：OpenSSL SSL_read: Connection was reset, errno 10054 错误解决 git config --global http.sslVerify &amp;#34;false&amp;#34;</description></item><item><title>Conda</title><link>https://www.jiangjunjie.cn/2021/03/conda/</link><pubDate>Thu, 25 Mar 2021 09:50:27 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/conda/</guid><description>cmd conda info --envs conda info -e conda create -n env-name python=X.X activate env-name deactivate conda remove -n env-name --all</description></item><item><title>Vscode</title><link>https://www.jiangjunjie.cn/2021/03/vscode/</link><pubDate>Wed, 24 Mar 2021 14:54:33 +0800</pubDate><guid>https://www.jiangjunjie.cn/2021/03/vscode/</guid><description>Open Powershell core in Terminal # settings.json &amp;#34;terminal.integrated.shell.windows&amp;#34;: &amp;#34;{path to pwsh.exe}&amp;#34;,</description></item></channel></rss>